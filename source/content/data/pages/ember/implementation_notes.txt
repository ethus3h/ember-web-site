**Ember** is the successor to [[:Weave]], [[:Wreathe]], [[:FMOS]], etc..

====== Project objectives / mission statement ======

Create a system to enable efficacy, efficiency, and justice of society.

The Ember Project would create a global power structure that would work to create an efficient opt-in society.

====== Project structure and implementation information ======

Ember will achieve these goals through creating individual components that each provide an integral part of the whole societal system. Implementation will probably need to be undertaken in stages, given the nature of 

====== More details ======


It is a database designed to use relationships to organise information.

It is an organisational structure based on three classes of information using which all knowledge can be organised. Its structural philosophy uses [[:nodes]], [[:relationships]], and [[:metadata]] to organise information. A [[:node]] represents an individual item or concept. A [[:relationship]] is a description of the connection between two [[:nodes]]. A [[:metadatum]] is an objective truth about a [[:node]], such as the number of words in a book or the dimensions of a sculpture. (Illustrations of this are available at [[:use cases]].)

The homepage of Weave in English can be found at [[http://futuramerlin.com/r.php?c=w&a=1&locale=|http://futuramerlin.com/r.php?c=w&a=1&locale=]]. Ember does not yet have a working implementation.

Ember (and Weave) use the [[:DCE]] format for the storage of its data. It uses a MySQL database for storage. It is written in PHP.

I found a quotation (14 March 2014, when I'm writing this) that seems to explain to some extent what I'm trying to do with this/these project(s): "Machines don't have a universal noun - that's why they suck." (http://www.looah.com/source/view/2284). This is one of the problems I hope Ember+DCE will solve.

[[:Structuring EMBER DMS]]

[[:Ember UI]]

//[[:n-space-native computer graphics system|n]]//[[:n-space-native computer graphics system|-space-native computer graphics system]]

[[:Coal]] (data storage system)

====== Brainstorming ideas: ======

===== Node examples — use cases: =====

Node — a new document someone created… — type: Digital data Has title (file name); has relationships: ☆→created by (ember account), ☆has revisions (each time saved or autosaved). Node: — a piece of music someone had in their computer upon backing up w/ Ember… — type: Digital data. Has title (file name); Relationships: has revision: only the current revision, since it’s never been resaved; has creator (ember account).; has date created (date created from filesystem — with source annotation) Note that the content & format metadata are stored with the Revision nodes, not with the main nodes. Each revision node has autodetected music metadata (e.g. by Musicbrainz PUID lookup) or other autodetected metadata, such as plagiarism detection information. Music metadata & such can be added manually to main &/or revision nodes. DCE (and Wreathe and Ember) should use Google Wave’s letter-by-letter edit tracking technology… then DCE data backed up wouldn’t need independent revision nodes like that — but instead justindependent revision nodes for actual conceptual revisions of the document. Maybe, to prevent confusion, autosaved revisions could be called by a different name (i.e. a word other than “revision”.)?…. Wreathe and Ember should hide their DCE underpinnings, for the most part, but at the same time, lower-level DCE editing should be easy.
====== Implementation ======

A full DCE editor à la Wreathe isn’t necessarily necessary for Ember’s web-based administration — just use the all-in-one DCE editor / Ember browser / etc. in Wreathe if one wants desktop-power-level DCE editing in Wreathe [possibly meant to write Ember there?]. Plus, DCE editing can be easily implemented in a web environment without worrying about rendering or display so much — just work with the raw Dcs if that kind of “advanced” functionality is desired, if necessary…?
===== Database schema ideas =====

[[:Ember data modeling]]
