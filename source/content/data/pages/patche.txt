<code>
Ok so my app should:
Make a list of all the files in the dirtree
mv each of them to its sha256
If the sha256 exists already, read both items to check for hash collision
if there's a collision, ask the user what to do, I guess (this shouldn't hapen)
then what...
Ah, for each as it mvs it,
ln -s it to its original location
Maintain a folder with all the sha256s that have been uled
Any new ones, upload them
and add them to that folder
(as a sha256 containing the IA URL)
Then pax.xz the folder of sha256s containg the IA url, and the folder of ln -ses
and upload that.
So, that file with the IA URLs by sha256 and the ln -ses are all that's needed to clone the repo
I think that's pretty cool!
When cloning, it'll 1) dl the pax.xz, 2) extract it, 3) donwnload any missing sha256s with the contents
In the upload and download process, gpg the files.
And pax.xz them
in the other order
1st step: If there aren't the necessary folder,s create them
For the encryption, use a config file
with the passphrase
And that should be all that's needed to make this app work!
I't'll need only the amuont of free disk space as the biggest file
unlike Patche, which I'm using now, and needs 3x the free disk space of the whole repository
</code>