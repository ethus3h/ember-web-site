<h1>ember-shared</h1>

<p class="breadcrumbs">Page location:
    <span><a href="/ancillary/ready-to-use.htm">Software</a></span>
</p>

<h2>Overview</h2>
    <p>Code shared between various Ember software.</p>

<h2>Documentation</h2>
    <h3>Usage</h3>
        <p>ember-shared provides the following command-line scripts, mainly useful for writing other scripts.</p>
        <dl>
            <dt><code>csum</code></dt><dd>Generate and check against lists of file checksums. If no action is specified, <code>save</code> is assumed; if no path is specified, the current directory is assumed; if no checksum file name is specified, stdout/stdin are used for <code>save</code> and <code>check</code> respectively. Note that at least one checksummable file must be specified for the resulting file to be usable: a single empty directory, for instance, will result in an unusable file. Synopsis: <code>csum [(--save|--check)] [&lt;path&gt;... [&lt;checksum-file-name&gt;|""|-]]</code></dd>
            <dt><code>disk-size-in-bytes</code></dt><dd>Returns an estimate sum of the disk usage of the specified files, in bytes. Synopsis: <code>disk-size-in-bytes &lt;file&gt;...</code></dd>
            <dt><code>ember-editconf</code></dt><dd>Open the Ember configuration file in the default editor. Synopsis: <code>ember-editconf</code></dd>
            <dt><code>error-notify</code></dt><dd>Notify the user of a shell script of an error condition. Synopsis: <code>error-notify [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise error-notify exits with status 1)</dd>
            <dt><code>htmlToText.pl</code></dt><dd>Print the standard input received by it, with any HTML tags removed, to standard output. Synopsis: <code>htmlToText.pl</code></dd>
            <dt><code>warn-timeout</code></dt><dd>Notify the user of a shell script of a warning, and wait a bit in the hope that they see the warning. Synopsis: <code>warn &lt;message-to-user&gt; [time-to-wait-in-seconds]</code> (time-to-wait defaults to 10 seconds)</dd>
            <dt><code>warn</code></dt><dd>Notify the user of a shell script of a warning. Synopsis: <code>warn &lt;message-to-user&gt;</code></dd>
        </dl>
        <p>In addition, ember-shared also provides the following scripts that it uses internally that are not supported for independent use.</p>
        <dl>
            <dt><code>a</code></dt><dd>Archive a URL recursively using <code>grab-site</code>, using a default configuration. Synopsis: <code>a [&lt;additional-grab-site-argument&lt;] &lt;url&gt;...</code></dd>
            <dt><code>abspath</code></dt><dd>Get the absolute path to the specified file or directory, like <code>readlink -f</code> but without resolving symlinks by default. Optionally, symlinks can be resolved in the path (still not resolving the final path element): this is for referencing the canonical path of a symlink without following that symlink. The path must exist. Synopsis: <code>abspath &lt;path&gt; [--resolve-symlinks-in-enclosing-directory-path]</code></dd>
            <dt><code>ap</code></dt><dd>Archive a URL recursively using <code>grab-site</code> and <code>phantomjs</code>, using a default configuration. Synopsis: <code>ap [&lt;additional-grab-site-argument&lt;] &lt;url&gt;...</code></dd>
            <dt><code>aq</code></dt><dd>Archive a URL recursively using <code>grab-site</code>, using a configuration that gives up quickly. Synopsis: <code>aq [&lt;additional-grab-site-argument&lt;] &lt;url&gt;...</code></dd>
            <dt><code>assert</code></dt><dd>Test for a condition, and report a failing status if the test fails. This is to facilitate writing readable unit tests. The <code>-v</code> makes some test types print additional information. Synopsis: <code>assert [-v] ( (directoryEquals &lt;directory-1&gt; &lt;directory-2&gt;) | (fileEquals &lt;file-1&gt; &lt;file-2&gt;) | (equals &lt;string-1&gt; &lt;string-2&gt;) | (true &lt;command&gt; [&lt;argument&gt;...]) | (false &lt;command&gt; [&lt;argument&gt;...]) | (matches_regex &lt;string&gt; &lt;regex&gt;) )</code></dd>
            <dt><code>bigSponge</code></dt><dd>Wrapper around <code>sponge</code> that uses the location provided by <code>getBigTempLocation</code> for its <code>TMPDIR</code>. Synopsis: <code>bigSponge [&lt;argument&gt;...]</code></dd>
            <dt><code>bigTempDir</code></dt><dd>Print a path to a temporary directory (in the Crystallize work directory, or another location as determined by a nonempty value of the <code>EMBER_TEMPDIR</code> variable) that can be safely deleted when you're done with it. Multiple temporary directories can be created through multiple calls to <code>bigTempDir</code>. Synopsis: <code>bigTempDir</code></dd>
            <dt><code>bigTempFile</code></dt><dd>Print a path to a temporary file (in the Crystallize work directory, or another location as determined by a nonempty value of the <code>EMBER_TEMPDIR</code> variable) that can be safely deleted when you're done with it. Multiple temporary files can be created through multiple calls to <code>bigTempFile</code>. Synopsis: <code>bigTempFile</code></dd>
            <dt><code>checkedxz</code></dt><dd>Wrapper around <code>xz</code>, to make sure the output isn't corrupt. If <code>-</code> is specified as the input file, output will be to stdout regardless of the presence or absence of <code>--stdout</code>. <code>--quiet</code> can be used to suppress the progress bars that are shown by default. Synopsis: <code>checkedxz [--quiet|--request-wait-after] [ (-|&lt;input-file&gt;) [--stdout] &lt;argument-for-xz&gt;... ]</code></dd>
            <dt><code>contains</code></dt><dd>Test whether an array contains a particular value. Synopsis: <code>contains &lt;value&gt; &lt;array-arg&gt;...</code></dd>
            <dt><code>date-uuid</code></dt><dd>Returns a timestamp combined with a random (V4) UUID. Synopsis: <code>date-uuid</code></dd>
            <dt><code>defaultEditor</code></dt><dd>Wrapper around the default text editor. Synopsis: <code>defaultEditor [&lt;argument&gt;...]</code></dd>
            <dt><code>die</code></dt><dd>Notify the user of a shell script of an error condition, and exit. Synopsis: <code>die [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise the script exits with status 1)</dd>
            <dt><code>die</code></dt><dd>Tells the user that their bash environment is misconfigured (this script should never run if everything is working). Synopsis: <code>die [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise die exits with status 1)</code></dd>
            <dt><code>eescape</code></dt><dd>Prepare a string for use as a Perl replacement match pattern (left side), used by <code>ereplace</code>. Synopsis: <code>eescape &lt;string&gt;</code></dd>
            <dt><code>embasename</code></dt><dd>Replacement for <code>basename</code> in bash. Synopsis: <code>embasename &lt;path&gt;</code></dd>
            <dt><code>embasename</code></dt><dd>Replacement for <code>basename</code> in bash. Synopsis: <code>embasename &lt;path&gt;</code></dd>
            <dt><code>ember-getconf</code></dt><dd>Retrieve a configuration value from the configuration file used by Ember tools. The value returned for the <code>WorkDirectory</code> option can be overridden by setting <code>EmberWorkdirOverride54ae685dc782437c99bc46c7a1211377</code> to a non-empty value. Synopsis: <code>ember-getconf (&lt;configuration-key-name&gt;|ConfigLocation|ConfigDir|crystallizeVersion|emberSharedVersion)</code></dd>
            <dt><code>ember_bash_setup</code></dt><dd>Set up the bash environment shared by various Ember projects. To use the <code>--version</code> option of <code>ember_bash_setup</code>, it is necessary to have <code>e8787d06e61943a6874e94985b53bc0a="2dee41bf-53fb-4f65-997f-33bf50bfbb4d"</code> when running <code>ember_bash_setup --version</code>. It may be important to run <code>unset e8787d06e61943a6874e94985b53bc0a</code> afterwards. Using bash's <code>$()</code>syntax (which creates a subshell), it can be written succinctly, with no need to <code>unset</code> afterwards, as <code>$(e8787d06e61943a6874e94985b53bc0a="2dee41bf-53fb-4f65-997f-33bf50bfbb4d"; ember_bash_setup --version)</code>. (Note that if ember_bash_setup has already been sourced, the ember-shared version is already available as <code>$emberSharedVersion</code>, with no need for these shenanigans.) Synopsis: <code>(source ember_bash_setup) | (ember_bash_setup --version)</code></dd>
            <dt><code>emdate</code></dt><dd>Returns a timestamp. Synopsis: <code>emdate</code></dd>
            <dt><code>emreadlink</code></dt><dd>Alias for <code>abspath</code> with the <code>--resolve-symlinks-in-enclosing-directory-path</code> option. Synopsis: <code>emreadlink &lt;path&gt;</code></dd>
            <dt><code>ereplace</code></dt><dd>Replace one string with another ie n the specified file (without interpreting metacharacters). Synopsis: <code>ereplace &lt;string-to-replace&gt; &lt;replacement-string&gt; &lt;file&gt;</code></dd>
            <dt><code>ereplaceRegEx</code></dt><dd>Perform a Perl regex substitution on the specified file (interpreting metacharacters). The match and replacement must be a valid within a <code>s///g</code> in Perl (it will be literally interpolated into the Perl code, rather than escaped as it is with <code>ereplace</code>). Synopsis: <code>ereplaceRegEx &lt;regex-match&gt; &lt;replacement&gt; &lt;file&gt;</code></dd>
            <dt><code>findso</code></dt><dd>Given the file name of a <code>.so</code> shared library, print the full path to it. The <code>--plain</code> option indicates that the library name is in the form <code>libfoo.so</code>, while by default it assumes that the form <code>foo</code> is used. Synopsis: <code>findso [--plain] &lt;library-name&gt;</code></dd>
            <dt><code>firefox-places-build</code></dt><dd>FIXME: Restored places.sqlite doesn't work. Build a <code>places.sqlite</code> and a <code>sessionstore.js</code> in the current directory from existing <code>firefox-places-dump.sql</code>, <code>firefox-places-dump.schema.sql</code>, and <code>firefox-places-dump.sessionstore.js</code> in the current directory (created by <code>firefox-places-dump</code>). Synopsis: <code>firefox-places-build</code></dd>
            <dt><code>firefox-places-dump</code></dt><dd>FIXME: Restored places.sqlite doesn't work. Save the current user's Firefox <code>places.sqlite</code> and <code>sessionstore.js</code> to <code>firefox-places-dump.sql</code>, <code>firefox-places-dump.schema.sql</code>, and <code>firefox-places-dump.sessionstore.js</code> in the current directory (or optionally, the <code>places.sqlite</code> and <code>sessionstore.js</code> in the specified directory). The files have a newline as every other character, so they can be easily diffed by git for smaller snapshot storage. "Reversing" (using <code>firefox-places-build</code>) this should <em>not</em> be assumed to produce the input bit-for-bit. Synopsis: <code>firefox-places-dump [&lt;path-to-profile-directory&gt;]</code></dd>
            <dt><code>get-default-firefox-profile</code></dt><dd>Print the path of the default Firefox profile in <code>.mozilla/firefox</code> in the current user's home directory (or else in a directory containing profiles specified by an optional argument, such as <code>/home/someoneelse/.mozilla/firefox</code>). Synopsis: <code>get-default-firefox-profile [&lt;path-to-profiles-directory&gt;]</code></dd>
            <dt><code>flacToWaveform</code></dt><dd>Generate a .png waveform file in a manner compatible with the Internet Archive's derivative process. Synopsis: <code>flacToWaveform &lt;path-to-input-file.flac&gt;</code></dd>
            <dt><code>bulkFlacToWaveform</code></dt><dd>Call <code>flacToWaveform</code> for multiple files. Synopsis: <code>bulkFlacToWaveform &lt;path-to-input-file.flac&gt;...</code></dd>
            <dt><code>getBigTempLocation</code></dt><dd>Print the path to the Crystallize work directory, or another location as determined by a nonempty value of the <code>EMBER_TEMPDIR</code> variable, or failing those, the system's general preferred temporary file location. Synopsis: <code>getBigTempLocation</code></dd>
            <dt><code>getDefaultEditor</code></dt><dd>Returns the command of the default text editor. Synopsis: <code>getDefaultEditor</code></dd>
            <dt><code>getDefaultEditorPath</code></dt><dd>Returns a path to the default text editor. Synopsis: <code>getDefaultEditorPath</code></dd>
            <dt><code>getGrabSiteGrabLocation</code></dt><dd>Returns the default directory for <code>grab-site</code> grabs to go into. Note that if <code>$HOME/gs-grabs</code> exists and <code>.grab-site-grabs</code> in the system work directory does not exist, the former will be used, instead of the latter, which is otherwise the default. Synopsis: <code>getGrabSiteGrabLocation</code></dd>
            <dt><code>getGrabSitePath</code></dt><dd>Returns the path of the <code>grab-site</code> command, even if it is not in <code>$PATH</code>. Synopsis: <code>getGrabSitePath</code></dd>
            <dt><code>getPhantomjsPath</code></dt><dd>Returns the path of the <code>phantomjs</code> command, even if it is not in <code>$PATH</code>. Synopsis: <code>getPhantomjsPath</code></dd>
            <dt><code>getSystemTempLocation</code></dt><dd>Print the path to the system's preferred temporary file location. Synopsis: <code>getSystemTempLocation</code></dd>
            <dt><code>getWorkdirLocation</code></dt><dd>Print the path to the system's preferred work file location. Synopsis: <code>getWorkdirLocation</code></dd>
            <dt><code>git-bulk-sync</code></dt><dd>Run <code>git-sync</code> for each repository given in a newline-delimited list of repositories passed to stdin. Does not support newlines in repository names. Synopsis: <code>git-bulk-sync</code></dd>
            <dt><code>git-sync</code></dt><dd>Make or update a backup of the specified Git repository (in a form that can be given to <code>git mirror</code>) in the current directory. Synopsis: <code>git-sync &lt;repository&gt;</code></dd>
            <dt><code>grab-site</code></dt><dd>Call <code>grab-site</code>, regardless of whether it is in <code>$PATH</code>. Synopsis: <code>grab-site &lt;argument&gt;...</code></dd>
            <dt><code>ia</code></dt><dd>Wrapper around the <code>ia</code> tool for communicating with the Internet Archive, which can be used as a drop-in replacement for the standard <code>ia</code> command. Using the <code>downloadAsStream</code> subcommand will send the contents of the file represented by the Internet Archive file download URL specified to stdout. <code>checkeddl</code> accepts an Internet Archive item details URL or plain identifier as input. The <code>downloadHere</code> subcommand is equivalent to <code>wget &lt;URL&gt;</code> for Internet Archive download URLs. Synopsis: <code>ia [ ((downloadAsStream|downloadHere) &lt;URL&gt;) | (checkeddl &lt;URL&gt;...) | (listplain &lt;identifier&gt;) | ([argument]...) ]</code></dd>
            <dt><code>iafilename</code></dt><dd>Given an Internet Archive URL, path (with identifier), or plain identifier in the form <code>[https://archive.org/download/]identifier[/file/path]</code>, return the name of the last item in the path specified within the item specified. For the example URL, this would return "<code>path</code>". Synopsis: <code>iafilename &lt;input&gt;</code></dd>
            <dt><code>iaident</code></dt><dd>Given an Internet Archive URL, path (with identifier), or plain identifier in the form <code>[https://archive.org/download/]identifier[/file/path]</code>, return the Internet Archive identifier. For the example URL, this would return "<code>identifier</code>". Synopsis: <code>iaident &lt;input&gt;</code></dd>
            <dt><code>iamd5</code></dt><dd>Given an Internet Archive URL to a file, path to a file (with identifier), or identifier with file name in the form <code>[https://archive.org/download/]identifier/file/path</code>, return the MD5 checksum that the Internet Archive reports for the file specified. Right now, because item files XMLs do not have checksums available for them from the Internet Archive (since the XML files are where the checksums are kept), <code>iamd5</code> will retrieve it and calculate the checksum dynamically. <em>This could be suboptimal (or even harmful) since there is no guarantee that the returned value is correct; this behavior may change in later versions</em>. Synopsis: <code>iamd5 &lt;input&gt;</code></dd>
            <dt><code>iapath</code></dt><dd>Given an Internet Archive URL, path (with identifier), or plain identifier in the form <code>[https://archive.org/download/]identifier[/file/path]</code>, return the path to the item (not including the identifier). For the example URL, this would return "<code>file/path</code>". Synopsis: <code>iapath &lt;input&gt;</code></dd>
            <dt><code>iasha1</code></dt><dd>Given an Internet Archive URL to a file, path to a file (with identifier), or identifier with file name in the form <code>[https://archive.org/download/]identifier/file/path</code>, return the SHA1 checksum that the Internet Archive reports for the file specified. Right now, because item files XMLs do not have checksums available for them from the Internet Archive (since the XML files are where the checksums are kept), <code>iasha1</code> will retrieve it and calculate the checksum dynamically. <em>This could be suboptimal (or even harmful) since there is no guarantee that the returned value is correct; this behavior may change in later versions</em>. Synopsis: <code>iasha1 &lt;input&gt;</code></dd>
            <dt><code>iaurl</code></dt><dd>Given an Internet Archive URL, path (with identifier), or plain identifier in the form <code>[https://archive.org/download/]identifier[/file/path]</code>, return the full URL. For the example URL, this would return "<code>https://archive.org/download/identifier/file/path</code>". Synopsis: <code>iaurl &lt;input&gt;</code></dd>
            <dt><code>invertReturnValue</code></dt><dd>Returns 1 if the command returns true, or 0 if it returns false. Synopsis: <code>invertReturnValue &lt;command&gt; [&lt;argument&gt;...]</code></dd>
            <dt><code>isEmptyDir</code></dt><dd>Exits with exit code 0 if the path specified is an empty directory, and 1 otherwise (including if the path does not exist). Synopsis: <code>isEmptyDir &lt;path&gt;</code></dd>
            <dt><code>isIaName</code></dt><dd>Given a string, exit 0 if it could be an Internet Archive URL, path, or identifier in the form <code>[https://archive.org/download/]identifier[/file/path]</code>; otherwise exit 1. Synopsis: <code>isIaName &lt;input&gt;</code></dd>
            <dt><code>isSubdirOf</code></dt><dd>Exits 0 if the second argument is a subdirectory of the first argument (but not if they are the same directory). Synopsis: <code>isSubdirOf &lt;possible-enclosing-directory&gt; &lt;possible-subdirectory&gt;</code></dd>
            <dt><code>newline-terminated-characters-from-text</code></dt><dd>Place a newline after each character in the text file sent to standard input, and send the result to standard output. Does not work on files with nulls in them, and probably not on other things that aren't normal text files either. Synopsis: <code>newline-terminated-characters-from-text</code></dd>
            <dt><code>newline-terminated-characters-to-text</code></dt><dd>Reverse the function of <code>newline-terminated-characters-from-text</code>. Synopsis: <code>newline-terminated-characters-to-text</code></dd>
            <dt><code>normalizeWhitespace</code></dt><dd>Given a string, replace all whitespace with spaces, collapsing to a single space in the case of consecutive whitespace characters, and trim any whitespace from the beginning and end of the string. Synopsis: <code>normalizeWhitespace &lt;string&gt;</code></dd>
            <dt><code>o</code></dt><dd>Archive a URL non-recursively using <code>grab-site</code>, using a default configuration. Synopsis: <code>o [&lt;additional-grab-site-argument&lt;] &lt;url&gt;...</code></dd>
            <dt><code>op</code></dt><dd>Archive a URL non-recursively using <code>grab-site</code> and <code>phantomjs</code>, using a default configuration. Synopsis: <code>op [&lt;additional-grab-site-argument&lt;] &lt;url&gt;...</code></dd>
            <dt><code>oq</code></dt><dd>Archive a URL non-recursively using <code>grab-site</code>, using a configuration that gives up quickly. Synopsis: <code>oq [&lt;additional-grab-site-argument&lt;] &lt;url&gt;...</code></dd>
            <dt><code>phantomjs</code></dt><dd>Call <code>phantomjs</code>, regardless of whether it is in <code>$PATH</code>. Synopsis: <code>grab-site &lt;argument&gt;...</code></dd>
            <dt><code>preadconf</code></dt><dd>Read a value from a configuration file, and print it (if the key is present multiple times in the file, the first value will be printed). Synopsis: <code>preadconf &lt;key&gt; &lt;file&gt;</code></dd>
            <dt><code>prefixPipe</code></dt><dd>Prints standard input preceded by its argument to standard output. Synopsis: <code>prefixPipe &lt;prefix&gt;</code></dd>
            <dt><code>print</code></dt><dd>Prints a string. Synopsis: <code>print &lt;string&gt;</code></dd>
            <dt><code>print_r</code></dt><dd>Prints its arguments. Synopsis: <code>print_r [&lt;array-element&gt;...]</code></dd>
            <dt><code>readconf</code></dt><dd>Read a value from a configuration file, and return it as <code>readconfValue</code> (this is an array, and will contain multiple results if the key is present multiple times in the file). If <code>&lt;key&gt;</code> is not provided, it will return the non-comment lines of the file instead. Synopsis: <code>readconf [&lt;key&gt;] &lt;file&gt;</code></dd>
            <dt><code>removeDuplicateLines</code></dt><dd>Prints unique lines from the specified file to standard output. Synopsis: <code>removeDuplicateLines &lt;file&gt;</code></dd>
            <dt><code>reportTests</code></dt><dd>Print a report about tests that have been run using <code>runTest</code>. Synopsis: <code>reportTests</code></dd>
            <dt><code>retryUntilSuccess</code></dt><dd>Retry the specified command until it succeeds. The default maximum number of retries is -1, representing an unlimited number. The default maximum time to wait between retries is 0 seconds. The default delay time backoff increment is 1. The default initial delay time is 0 seconds. A good set of values for this for network requests is <code>-1 30 5 5</code>, which is similar to what is used by Crystallize, and will start with a five-second wait on the first failure, and then increase the delay by five seconds for each subsequent retry, until the delay reaches thirty seconds. Synopsis: <code>retryUntilSuccess [&lt;maximum-number-of-retries&gt;] [&lt;maximum-time-to-wait-between-retries-in-seconds&gt;] [&lt;delay-time-backoff-increment&gt;] [&lt;initial-retry-delay-time&gt;] &lt;command-or-function&gt; [&lt;argument&gt;...]</code></dd>
            <dt><code>runTest</code></dt><dd>Run the specified unit test. Tests can be the name of a directory, the name of a file containing commands to run for the test, the name of a function or command, or an exit code. If you want to test a function but its name is also used by a file, wrap it in braces (<code>runTest { foo }</code>). Wrapping your test in braces like that will return an exit status for the code in braces as an argument to runTest, thus allowing inline anonymous functions to be used as unit tests. Synopsis: <code>runTest [-v|-vv] ((&lt;test-directory-path&gt;|&lt;test-file-path&gt;|&lt;test-command-or-function&gt; [&lt;test-argument&gt;...])|&lt;test-exit-status&gt;)</code></dd>
            <dt><code>setVariableToCommandOutput</code></dt><dd>Alternative to bash command substitution (<code>"$(command)"</code>) that preserves trailing newlines. <code>variable-name</code> must not be "<code>emSetVariableToCommandOutputVar</code>". Synopsis: <code>setVariableToCommandOutput &lt;variable-name&gt; &lt;command&gt; [argument]...</code></dd>
            <dt><code>spopd</code></dt><dd>Wrapper around <code>popd</code> that does not print the name of the changed directory. Synopsis: <code>popd [&lt;argument&gt;...]</code></dd>
            <dt><code>spushd</code></dt><dd>Wrapper around <code>pushd</code> that does not print the name of the changed directory. Synopsis: <code>pushd [&lt;argument&gt;...]</code></dd>
            <dt><code>suffixPipe</code></dt><dd>Prints standard input followed by its argument to standard output. Synopsis: <code>suffixPipe &lt;suffix&gt;</code></dd>
            <dt><code>surroundPipe</code></dt><dd>Prints standard input preceded by its first argument and followed by its second to standard output. Synopsis: <code>surroundPipe &lt;prefix&gt; &lt;suffix&gt;</code></dd>
            <dt><code>tempDir</code></dt><dd>Print a path to a temporary directory (in the system default location) that can be safely deleted when you're done with it. Multiple temporary directories can be created through multiple calls to <code>tempDir</code>. Synopsis: <code>tempDir</code></dd>
            <dt><code>tempFile</code></dt><dd>Print a path to a temporary file (in the system default location) that can be safely deleted when you're done with it. Multiple temporary files can be created through multiple calls to <code>tempFile</code>. Synopsis: <code>tempFile</code></dd>
            <dt><code>tr</code></dt><dd>Wrapper around <code>tr</code> that sets <code>LC_CTYPE=C</code> if running in macOS. Synopsis: <code>tr [&lt;argument&gt;...]</code></dd>
            <dt><code>urldecode</code></dt><dd>URL decode the specified string. Synopsis: <code>urldecode &lt;string&gt;</code></dd>
            <dt><code>urlencode</code></dt><dd>URL encode the specified string. Synopsis: <code>urlencode &lt;string&gt;</code></dd>
            <dt><code>version_gt</code></dt><dd>Return 0 if the first version number is greater than (not equal to) the second, or non-zero otherwise (including if the two version numbers are the same). Synopsis: <code>version_gt &lt;version-number-1&gt; &lt;version-number-2&gt;</code></dd>
            <dt><code>ytdl-quick-audio</code></dt><dd>Call <code>youtube-dl</code> with some default options set up, to get audio only, for the specified item. Synopsis: <code>ytdl-quick-audio &lt;argument-or-item-to-fetch&gt;...</code></dd>
            <dt><code>ytdl-quick</code></dt><dd>Call <code>youtube-dl</code> with some default options set up, for the specified item. Synopsis: <code>ytdl-quick &lt;argument-or-item-to-fetch&gt;...</code></dd>
        </dl>
        </dl>
        <dl>
        <p><code>ember_bash_setup</code> provides these bash functions.</p>

    <h3>Installation</h3>
        <p>For Wreathe 7.3, an ebuild (<code>app-misc/ember-shared</code>) is available in the <a href="/ancillary/wreathe">Wreathe</a> overlay (this may also work for similar operating systems such as Ututo XS GNU/Linux).</p>
        <p>For other operating systems, use the following installation instructions.</p>

        <h4>Instructions for installation without ebuild</h4>

            <h5>Requirements</h5>
                <ul>
                  <li>A recent version of bash</li>
                </ul>
            <h5>Optional requirements</h5>
                <p>For the <code>htmlToText.pl</code> command, the <code>HTML::Restrict</code> Perl module is required. It can be installed by running <code>sudo cpan -f -i HTML::Restrict</code>.</p>
                <p>For the <code>ia</code> command, the following additional requirements apply.
                <ul>
                    <li>An account at the non-profit <a href="https://archive.org/">Internet Archive</a></li>
                    <li>ia (<a href="https://pypi.python.org/pypi/internetarchive">https://pypi.python.org/pypi/internetarchive</a>) 1.0.2 or later (ia must be configured by running <code>ia configure</code> since installing 1.0.2 or later before Crystallize can be used)</li>
                    <li><a href="https://neilb.bitbucket.io/csvfix/">CSVfix</a> is required.</li>
                </ul>
                <p>For the <code>ytdl-quick</code> and <code>ytdl-quick-audio</code> commands, <a href="https://youtube-dl.org/"><code>youtube-dl</code></a> is required.</p>
                <p>For the <code>flacToWaveform</code> command, matplotlib and pylab are required.</p>
                <p>For the <code>a</code>, <code>o</code>, <code>aq</code>, <code>oq</code>, <code>ap</code>, <code>op</code>, <code>grab-site</code>, and <code>getGrabSitePath</code> commands, <a href="https://github.com/ludios/grab-site"><code>grab-site</code></a> is required.</p>
                <p>For the <code>ap</code>, <code>op</code>, <code>phantomjs</code>, and <code>getPhantomjsPath</code> commands, <code>phantomjs</code> (e.g. as described <a href="https://github.com/ludios/grab-site/issues/55#issuecomment-162118702">here</a>) is required.</p>

            <h5>Download</h5>
                <p>To download ember-shared, run:</p>
                <pre><code>git clone https://github.com/ethus3h/ember-shared.git</code></pre>

            <h5>Copy scripts</h5>
                <p>To install the downloaded scripts, copy them to your preferred location.</p>

<h2>Development</h2>
    <p>To learn about contributing to this project, visit <a href="../develop.htm">the development page</a>.</p>
