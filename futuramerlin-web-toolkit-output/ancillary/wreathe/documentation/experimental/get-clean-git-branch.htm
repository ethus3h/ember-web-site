<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <link href="/simple.css" rel="stylesheet" type="text/css"> <meta content="Ember" name="author"> <meta content="width=device-width,height=device-height,user-scalable=yes" name="viewport"> <meta name="generator" content="Futuramerlin Web Toolkit 2.3.100"> <title>How to get a clean, up-to-date with master branch in a forked git repository &mdash; Wreathe Documentation &mdash; Ember</title> </head> <body> <input class="nav-trigger" id="nav-trigger" type="checkbox"> <label for="nav-trigger">&nbsp;</label> <nav> <p class="logo"> <a class="nodecorate logolink" href="/">ember</a> </p> <ul> <li>Navigation:</li> <li class="nav-item nav-item-inactive"> <a href="/">Home</a> </li> <li class="nav-item nav-item-inactive"> <a href="/news">News</a> </li> <li class="nav-item nav-item-inactive"> <a href="/ancillary/ready-to-use.htm">Software</a> </li> <li class="nav-item nav-item-inactive"> <a href="/components.htm">Primary project components</a> </li> <li class="nav-item nav-item-inactive"> <a href="/people">People</a> </li> </ul> <a href="#">&#x1F51D;&#xFE0E;</a> </nav> <main> <h1>How to get a clean, up-to-date with master branch in a forked git repository &mdash; Wreathe Documentation</h1> <p class="breadcrumbs">Page location: <span><a href="/ancillary/ready-to-use.htm">Software</a></span> <span><a href="/ancillary/wreathe/">Wreathe</a></span> <span><a href="/ancillary/wreathe/documentation/">Documentation</a></span> <span><a href="/ancillary/wreathe/documentation/experimental/">Documentation for experimental features</a></span> </p> <p class="hatnote-emphasis-warning">This article applies to: Wreathe 7.3</p> <p>If you have a fork of a git repository and want to have a new clean branch that's up to date with the original repository you forked it from, run something like this, substituting in the correct values for the camelCase text:<br> <pre><code>git clone https://github.com/yourName/repositoryName.git; cd repositoryName; git checkout -b nameForNewBranch shaSumOfLastUpstreamCommitYouHave; git remote add upstream https://github.com/ownerName/repositoryName.git; git pull upstream master; git fetch upstream master; git reset --hard upstream/master; git push --set-upstream origin nameForNewBranch</code></pre></p> </main> </body> </html>