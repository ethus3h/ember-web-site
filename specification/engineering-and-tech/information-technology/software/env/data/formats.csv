ID,Format name,Extension,"Import support
(for trans_:
  =run the tr.)","Export support
(for trans_:
  =reverse the
    tr.)",Tests,"Type
(blank=normal)",Label,"Variant Types
(comma-
  delimited)","Comments. The “Format name” is an ID, and should conform to StageL ident naming.
Import/export/tests support columns meaning:
   -1=N/A
   blank/0=none
   1=WIP
   2=mostly, or fully for at least one version of a format with options
   3=fully implemented for semantic content (and tests for variation in non-semantic details of the structure of the doc being imported)
   4=lossless and roundtrippable (with enough info for unambiguous bit-for-bit reconstruction of any given input)
   5=4+optional strict validation."
0,utf8,utf8,1,2,1,encoding,UTF-8,unicodePua,"For “encoding” formats, the extension given should have “.txt” appended to it when it’s not being used as an option for another format (e.g. HTML). Variants: unicode versions, BOM/no BOM, line ending variants (CR/LF/CRLF/the various others floating around), PUA extensions (variant:unicodePua type)."
1,dc,,-1,-1,-1,internal,,,Array of Dc ints. There’s no defined representation of these “internal-only” formats outside of StageL language constructs.
2,integerList,dcil,2,3,1,,Dc Integer List,,"ASCII text containing list of integers representing Dcs. Strictly, one space after every int, and no newlines. Loosely, with newlines or multiple spaces, or no end space."
3,asciiSafeSubset,ascii,3,3,1,encoding,Printable ASCII,,"ASCII with no control characters. Variants: Line ending variants allowed for *reading*, but only CR/LF/CRLF, and all of them mean unambiguous CR+LF (=EOL), and should be interpreted as such on import and emitted as such on export, thus preserving line-endings by requiring non-CRLF to be stored using a higher-level protocol (e.g. base64ing the content and using this as an ASCII armor format only). How useful this format is is debateable."
4,ascii,ascii,3,3,1,encoding,ASCII,,7-bit ASCII. Variants: Line ending variants
5,html,htm,,1,1,,HTML,encoding,
6,sems,sems,2,,1,,SEMS,,"Space-separated list of ints representing Dcs, with comments. Comments are UTF-8. Strictly, one space after every int, valid UTF-8 comments only, and a final newline."
7,unicode,,-1,-1,-1,internal,,,Array of ints representing Unicode characters. Might include things that aren’t valid unicode.
8,vt100,vt100,,,,terminal,VT100,,Terminal format is an option for text files; when exporting would get the extension format: [terminal].[encoding].txt for example: vt100.utf8.txt
9,characterCells,txt,,,,,Character-mode terminal,,"Variants: terminal, encoding"
10,immutableCharacterCells,txt,,,,,Character-mode teleprinter,,"Variants: terminal, encoding. (A printer that can overstrike etc. would still be considered immutable; immutable refers to whether it can erase. Raster, postscript, etc. printers would use their respective formats rather than this one.)"
11,dcBasenb,dcbnb,,,,v:unicodePua,Dc in Unicode,,unicodePua = extension to Unicode using the Private Use Areas
12,basenb,basenb,,,,data,,,"data = format that can hold generic binary data (or at least, generic sequences of bytes; not all formats support generic numbers of bits)."
13,htmlFragment,htmfrag,,1,1,,HTML fragment,,Variants: same as HTML
14,text,txt,,,,,,encoding,HTML and text both should default to UTF8 as the default encoding. Encodings fill a somewhat odd role since they are both encodings and formats (with the text format plus a given encoding being the same thing as that encoding by itself).
15,lang_en,en,,1,,language,English,,"Most formats have language variant types, for printing structured metadata where it’s not supported. Whether it should be printed by default is debateable."
16,lang_en-US,en-US,,,,lv:en,English (US),,"Language variants aren’t handled as format variants of the languages they are variants of, since there aren’t tons of possible combinations (at least that are practical to support). Instead, the type is given as lv: followed by the language identifier of which they are a variant (without the lang_ prefix)."
17,elad,elad,,1,,,EITE Language in ASCII documents (ELAD),,
18,javascript,js,,,,programming,JavaScript,,"Programming languages are both formats on their own account, and variants of other formats: for exporting to a text-based format, you could opt to have programmatic Dcs exported to a programming language or a natlang."
19,semanticToText,,1,,,transformation,Semantic Dcs to text,,“transformation” types operate on documents stored as arrays of Dcs.
20,codeToText,,1,,,transformation,Programmatic Dcs to text,,
21,colorcoded,htm,,1,,,Color-coded HTML integer list,,HTML file containing color-coded Dc integer list
22,,,,,,,,,
23,,,,,,,,,
24,,,,,,,,,
25,,,,,,,,,
26,,,,,,,,,
27,,,,,,,,,
28,,,,,,,,,
29,,,,,,,,,
30,,,,,,,,,
31,,,,,,,,,
32,,,,,,,,,
33,,,,,,,,,
34,,,,,,,,,
35,,,,,,,,,
36,,,,,,,,,
37,,,,,,,,,
38,,,,,,,,,
39,,,,,,,,,
40,,,,,,,,,
41,,,,,,,,,
42,,,,,,,,,
43,,,,,,,,,
44,,,,,,,,,
45,,,,,,,,,
46,,,,,,,,,
47,,,,,,,,,
48,,,,,,,,,
49,,,,,,,,,
50,,,,,,,,,
51,,,,,,,,,
52,,,,,,,,,
53,,,,,,,,,
54,,,,,,,,,
55,,,,,,,,,
56,,,,,,,,,
57,,,,,,,,,
58,,,,,,,,,
59,,,,,,,,,
60,,,,,,,,,
61,,,,,,,,,
62,,,,,,,,,
63,,,,,,,,,
64,,,,,,,,,
65,,,,,,,,,
66,,,,,,,,,
67,,,,,,,,,
68,,,,,,,,,
69,,,,,,,,,
70,,,,,,,,,
71,,,,,,,,,
72,,,,,,,,,
73,,,,,,,,,
74,,,,,,,,,
75,,,,,,,,,
76,,,,,,,,,
77,,,,,,,,,
78,,,,,,,,,
79,,,,,,,,,
80,,,,,,,,,
81,,,,,,,,,
82,,,,,,,,,
83,,,,,,,,,
84,,,,,,,,,
85,,,,,,,,,
86,,,,,,,,,
87,,,,,,,,,
88,,,,,,,,,
89,,,,,,,,,
90,,,,,,,,,
91,,,,,,,,,
92,,,,,,,,,
93,,,,,,,,,
94,,,,,,,,,
95,,,,,,,,,
96,,,,,,,,,
97,,,,,,,,,
98,,,,,,,,,
99,,,,,,,,,
100,,,,,,,,,
101,,,,,,,,,
102,,,,,,,,,
103,,,,,,,,,
104,,,,,,,,,
105,,,,,,,,,
106,,,,,,,,,
107,,,,,,,,,
108,,,,,,,,,
109,,,,,,,,,
110,,,,,,,,,
111,,,,,,,,,
112,,,,,,,,,
113,,,,,,,,,
114,,,,,,,,,
115,,,,,,,,,
116,,,,,,,,,
117,,,,,,,,,
118,,,,,,,,,
119,,,,,,,,,
120,,,,,,,,,
121,,,,,,,,,
122,,,,,,,,,
123,,,,,,,,,
124,,,,,,,,,
125,,,,,,,,,
126,,,,,,,,,
127,,,,,,,,,
128,,,,,,,,,
129,,,,,,,,,
130,,,,,,,,,
131,,,,,,,,,
132,,,,,,,,,
133,,,,,,,,,
134,,,,,,,,,
135,,,,,,,,,
136,,,,,,,,,
137,,,,,,,,,
138,,,,,,,,,
139,,,,,,,,,
140,,,,,,,,,
141,,,,,,,,,
142,,,,,,,,,
143,,,,,,,,,
144,,,,,,,,,
145,,,,,,,,,
146,,,,,,,,,
147,,,,,,,,,
148,,,,,,,,,
149,,,,,,,,,
150,,,,,,,,,
151,,,,,,,,,
152,,,,,,,,,
153,,,,,,,,,
154,,,,,,,,,
155,,,,,,,,,
156,,,,,,,,,
157,,,,,,,,,
158,,,,,,,,,
159,,,,,,,,,
160,,,,,,,,,
161,,,,,,,,,
162,,,,,,,,,
163,,,,,,,,,
164,,,,,,,,,
165,,,,,,,,,
166,,,,,,,,,
167,,,,,,,,,
168,,,,,,,,,
169,,,,,,,,,
170,,,,,,,,,
171,,,,,,,,,
172,,,,,,,,,
173,,,,,,,,,
174,,,,,,,,,
175,,,,,,,,,
176,,,,,,,,,
177,,,,,,,,,
178,,,,,,,,,
179,,,,,,,,,
180,,,,,,,,,
181,,,,,,,,,
182,,,,,,,,,
183,,,,,,,,,
184,,,,,,,,,
185,,,,,,,,,
186,,,,,,,,,
187,,,,,,,,,
188,,,,,,,,,
189,,,,,,,,,
190,,,,,,,,,
191,,,,,,,,,
192,,,,,,,,,
193,,,,,,,,,
194,,,,,,,,,
195,,,,,,,,,
196,,,,,,,,,
197,,,,,,,,,
198,,,,,,,,,
199,,,,,,,,,
200,,,,,,,,,
201,,,,,,,,,
202,,,,,,,,,
203,,,,,,,,,
204,,,,,,,,,
205,,,,,,,,,
206,,,,,,,,,
207,,,,,,,,,
208,,,,,,,,,
209,,,,,,,,,
210,,,,,,,,,
211,,,,,,,,,
212,,,,,,,,,
213,,,,,,,,,
214,,,,,,,,,
215,,,,,,,,,
216,,,,,,,,,
217,,,,,,,,,
218,,,,,,,,,
219,,,,,,,,,
220,,,,,,,,,
221,,,,,,,,,
222,,,,,,,,,
223,,,,,,,,,
224,,,,,,,,,
225,,,,,,,,,
226,,,,,,,,,
227,,,,,,,,,
228,,,,,,,,,
229,,,,,,,,,
230,,,,,,,,,
231,,,,,,,,,
232,,,,,,,,,
233,,,,,,,,,
234,,,,,,,,,
235,,,,,,,,,
236,,,,,,,,,
237,,,,,,,,,
238,,,,,,,,,
239,,,,,,,,,
240,,,,,,,,,
241,,,,,,,,,
242,,,,,,,,,
243,,,,,,,,,
244,,,,,,,,,
245,,,,,,,,,
246,,,,,,,,,
247,,,,,,,,,
248,,,,,,,,,
249,,,,,,,,,
250,,,,,,,,,
251,,,,,,,,,
252,,,,,,,,,
253,,,,,,,,,
254,,,,,,,,,
255,,,,,,,,,
256,,,,,,,,,
257,,,,,,,,,
258,,,,,,,,,
259,,,,,,,,,
260,,,,,,,,,
261,,,,,,,,,
262,,,,,,,,,
263,,,,,,,,,
264,,,,,,,,,
265,,,,,,,,,
266,,,,,,,,,
267,,,,,,,,,
268,,,,,,,,,
269,,,,,,,,,
270,,,,,,,,,
271,,,,,,,,,
272,,,,,,,,,
273,,,,,,,,,
274,,,,,,,,,
275,,,,,,,,,
276,,,,,,,,,
277,,,,,,,,,
278,,,,,,,,,
279,,,,,,,,,
280,,,,,,,,,
281,,,,,,,,,
282,,,,,,,,,
283,,,,,,,,,
284,,,,,,,,,
285,,,,,,,,,
286,,,,,,,,,
287,,,,,,,,,
