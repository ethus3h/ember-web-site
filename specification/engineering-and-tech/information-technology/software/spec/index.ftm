@1 <web>Information Technology Software Environment: </web>Interface Specification

<p class="breadcrumbs">Page location:
    <span><a href="/components.htm">Core project components</a></span>
    <span><a href="/specification">Specification</a></span>
    <span><a href="/specification/engineering-and-tech">Engineering and Technology</a></span>
    <span><a href="/specification/engineering-and-tech/information-technology">Information technology</a></span>
    <span><a href="/specification/engineering-and-tech/information-technology/software">Information Technology Software Environment</a></span>
</p>

<h2>Purpose of this document</h2>
    <p>The EITE specification indicates the various interfaces that an EITE implementation provides: APIs and tools for humans. The specific manner of implementation of these is not described here. (Partial implementations could be possible that, for instance, only provide importing and exporting (without running) documents, or that omit some supported formats, or that do not provide the tools.) The main EITE implementation software attempts to be a full implementation of this specification.</p>
    <p>This is a work in progress and will likely change as it is developed.</p>

<h2>EITE tools</h2>
    <p>The following natively implemented tools should be available in a full implementation: <a href="tool-testrunner.htm">test runner</a>, <a href="tool-docrunner.htm">document runner</a>, <a href="tool-implrunner.htm">main EITE implementation runner</a>, and <a href="tool-edit.htm">simple document edit tool</a>. They are not EITE documents; rather they are implemented for each platform, so they can be used in the course of developing and testing the EITE implementation. The also serve to some extent as sanity checks for the API functionality for a new implementation, as they would not work without the APIs available.</p>

<h2>EITE implementation public APIs</h2>
    <p>These APIs are implemented in public-interface.stagel.</p>
    <table>
    <thead>
    <tr><th>Routine name</th><th>Description</th></tr>
    </thead>
    <tbody>
    <tr><td>r/an/loadAndConvert s/inputFormat s/outputFormat s/path</td><td>Load the specified document, and return it converted to the specified outputFormat as an array of bytes.</td></tr>
    <tr><td>r/n/runDocumentPrepare an/contents</td><td>Prepare to run the provided document. Use this followed by runDocumentGo if you want to configure execution settings before starting the document.</td></tr>
    <tr><td>r/s/getExecOption n/execId s/key</td><td>Get the value of an execution option for a document.</td></tr>
    <tr><td>r/as/getExecOptions n/execId</td><td>Get the execution options set for a document.</td></tr>
    <tr><td>r/v/setExecOption n/execId s/key s/value</td><td>Set an execution option for a document.</td></tr>
    <tr><td>r/an/exportDocument s/format an/contents</td><td># Convert a document stored as an array of dcs to the specified format, and return it as an array of bytes.</td></tr>
    <tr><td>r/an/importDocument s/format an/contents</td><td>Convert a document stored as an array of bytes in the specified format, and return it as an array of dc.</td></tr>
    <tr><td>r/an/importAndExport s/inputFormat s/outputFormat an/contents</td><td>Convert a document stored as an array of bytes in the specified input format, and return it as an array of bytes in the specified output format.</td></tr>
    <tr><td>r/s/getFormatImportSetting s/format s/key</td><td>Return the value of the specified import setting for the specified format.</td></tr>
    <tr><td>r/s/getFormatExportSetting s/format s/key</td><td>Return the value of the specified export setting for the specified format.</td></tr>
    <tr><td>r/v/setFormatImportSetting s/format s/key s/value</td><td>Set the value of the specified import setting for the specified format.</td></tr>
    <tr><td>r/v/setFormatExportSetting s/format s/key s/value</td><td>Set the value of the specified export setting for the specified format.</td></tr>
    <tr><td>r/v/pushFormatImportSetting s/format s/key s/value</td><td>Temporarily set the value of the specified import setting for the specified format. Call setFormatImportSetting with the value this returns when you want to put the setting back.</td></tr>
    <tr><td>r/v/pushFormatExportSetting s/format s/key s/value</td><td>Temporarily set the value of the specified export setting for the specified format. Call setFormatExportSetting with the value this returns when you want to put the setting back.</td></tr>
    <tr><td>r/as/getFormatImportSettings s/format</td><td>Return the import settings array for the specified format.</td></tr>
    <tr><td>r/as/getFormatExportSettings s/format</td><td>Return the export settings array for the specified format.</td></tr>
    <tr><td>r/v/setFormatImportSettings s/format as/settings</td><td>Replace the import settings array for the specified format.</td></tr>
    <tr><td>r/v/setFormatExportSettings s/format as/settings</td><td>Replace the export settings array for the specified format.</td></tr>
    <tr><td>r/an/transformDocument an/inputDocument s/transformation</td><td>Apply one of the supported document transformations to the provided document, and return the result.</td></tr>
    <tr><td>r/an/loadStoredDocument s/format s/path</td><td>Load and return the specified document as a Dc array.</td></tr>
    <tr><td>r/as/getDesiredEventNotifications n/execId</td><td>Return list of event types (e.g. keystrokes, mouse movement, elapsed time) that the document wants to be notified of.</td></tr>
    <tr><td>r/an/sendEvent n/execId an/eventData</td><td>Send the provided event or events data to the specified document.</td></tr>
    <tr><td>r/an/getDocumentFrame n/execId s/format</td><td>Return the most recently available output for the given document in the requested format.</td></tr>
    <tr><td>r/b/runTests</td><td>Returns true if all tests pass; false otherwise. Displays a report of the tests.</td></tr>
    <tr><td>r/b/quietRunTests</td><td>Returns true if all tests pass; false otherwise.</td></tr>
    </tbody>
    </table>

<h2>Command-line interface (mostly unimplemented)</h2>
    <p>The EITE should provide the following user-facing command-line scripts.</p>
    <dl>
        <dt><code>eite</code></dt><dd>This is the main interface for EITE. Synopsis: <code>eite [check|run|run-tests|source-to-tree|tree-to-source] (&lt;path-to-document&gt;|-)</code></dd>
    </dl>
    <p>The EITE provides the following additional command-line scripts that it uses internally.</p>
    <dl>
        <dt><code>eite-check</code></dt><dd>Return false if the specified source document cannot be parsed. Synopsis: <code>eite-check (&lt;path-to-document&gt;|-)</code></dd>
        <dt><code>eite-run</code></dt><dd>Run the specified document. Synopsis: <code>eite-run (&lt;path-to-document&gt;|-) [--graphical]</code></dd>
        <dt><code>eite-run-tests</code></dt><dd>Run test suite. Synopsis: <code>eite-run-tests</code></dd>
        <dt><code>eite-source-to-tree</code></dt><dd>Given a source file, print out an AST representation of the document. Synopsis: <code>eite-run (&lt;path-to-document&gt;|-) [--graphical]</code></dd>
        <dt><code>eite-tree-to-source</code></dt><dd>Given an AST representation of a document, print out the source file for it. Synopsis: <code>eite-run (&lt;path-to-document&gt;|-) [--graphical]</code></dd>
    </dl>

<h2>Formats</h2>
    <p>The formats that should be supported are available in data/formats.csv. Only input or output is necessary for some formats, and some formats listed are internal formats only, which do not need to be implemented for purposes of this specification. The options that should be supported for given formats are: (TODO).</p>

<h2>Document transformations</h2>
    <p>Some transformations are provided that operate on already-imported documents (represented as arrays of Dcs), and return an altered array of Dcs. These share the format settings API for configuring them. The options that should be supported for given transformations are: (TODO).</p>

<h2>Exec options</h2>
    <p>The document exec options are: (TODO)</p>

<h2>EITE NDW APIs</h2>
    <table>
    <thead>
    <tr><th>Routine name</th><th>Description</th></tr>
    </thead>
    <tbody>
    <tr><td colspan="2">Document routines</td></tr>
    <tr><td>r/v/startEite</td><td>Start EITE, using the default startup document. Does not return while EITE is still running.</td></tr>
    <tr><td>r/v/loadAndRun s/format s/path</td><td>Load and run the specified document. Does not return while the document is still running.</td></tr>
    <tr><td>r/v/runDocument an/contents</td><td>Run the provided document. Does not return while the document is still running. Takes care of events and I/O automatically.</td></tr>
    <tr><td>r/v/runDocumentGo n/execId</td><td>Run a document, once it's been prepared to run by calling runDocumentPrepare.</td></tr>
    <tr><td>r/an/loadStoredDocument s/format s/path</td><td>Load and return the specified document as a Dc array.</td></tr>
    <tr><td>r/b/runTests</td><td>Returns true if all tests pass; false otherwise. Displays a report of the tests.</td></tr>
    <tr><td>r/b/quietRunTests</td><td>Returns true if all tests pass; false otherwise.</td></tr>
    <tr><td colspan="2">Networking</td></tr>
    <tr><td>r/an/networkAuth s/peer s/publicKey s/secretKey</td><td>Get a session token from the specified peer</td></tr>
    <tr><td>r/v/network s/path</td><td>Replace the contents of StageR's semi-persistent memory at the specified path.</td></tr>
    <tr><td colspan="2">Storage</td></tr>
    <tr><td>r/an/storageGet s/path</td><td>Dump the contents of StageR's semi-persistent memory at the specified path.</td></tr>
    <tr><td>r/v/storagePut s/path</td><td>Replace the contents of StageR's semi-persistent memory at the specified path.</td></tr>
    <tr><td colspan="2">Semi-persistent memory</td></tr>
    <tr><td>r/an/memoryGet s/path</td><td>Get the contents of StageR's semi-persistent memory at the specified path.</td></tr>
    <tr><td>r/v/memoryPut s/path</td><td>Replace the contents of StageR's semi-persistent memory at the specified path.</td></tr>
    <tr><td>r/an/getState</td><td>Dump the contents of StageR's semi-persistent memory.</td></tr>
    </tbody>
    </table>
